var searchIndex = JSON.parse('{\
"python":{"doc":"A Python compiler implemented in Rust.","t":[0,6,5,4,13,4,13,12,12,3,11,0,0,3,11,11,11,11,0,8,10,10,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ast","Tree","parse_str","VarType","Int","Instruction","VarDec","name","data","Program","new","codegen","buffer","Buffer","write","indent","dedent","dedent_level","generator","Generator","new","generate","CTarget","Module","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","new","generate","from","into_iter","default","default","eq","to_string","to_string","fmt","fmt","fmt","fmt"],"q":["python","python::ast","","","","","","python::ast::Instruction","","python::ast","","python","python::codegen","python::codegen::buffer","","","","","python::codegen","python::codegen::generator","","","","","python::ast","","","","","","","","","","","","","","","","","","","","","python::codegen::buffer","","","","","","","python::codegen::generator","","","","","","","","","","","","","","","","python::ast","","python::codegen::buffer","python::codegen::generator","python::codegen::buffer","","python::codegen::generator","python::ast","","","python::codegen::buffer"],"d":["Functionality for modifying and constructing parse trees …","A parse tree.","Parse a string into a Tree.","Variable types used in IR.","","IR Instructions.","A variable declaration. <code>name</code> is the name of the variable …","","","An IR program.","Create a new program from a Vec of <code>Instructions</code>.","Functionality related to code generation.","A buffer used in code generation.","An ultra-simple buffer that maintains indentation in …","Write <code>i</code> to the buffer.","Indent the buffer","Unindent the buffer.","","","All code generators (targets) implement this trait. ","Create a new instance of a Generator.","Generate code from an IR <code>Program</code> (see AST module.)","The C target.","An internal module used by the C target.  TODO: Make this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new <code>Program</code> from a parse tree.","Convert a <code>Program</code> into an <code>Iterator</code> of <code>Instruction</code>s.","Create a new buffer with an indentation level of 4.","","","Dump the buffer to a string.","","","","",""],"i":[0,0,0,0,1,0,2,3,3,0,4,0,0,0,5,5,5,5,0,0,6,6,0,0,1,1,1,1,1,1,1,2,2,2,2,2,2,2,4,4,4,4,4,4,4,5,5,5,5,5,5,5,7,7,7,7,7,7,7,8,8,8,8,8,8,8,7,7,4,4,5,8,5,5,8,1,2,4,5],"f":[null,null,[[["str",15]],["tree",6]],null,null,null,null,null,null,null,[[["instruction",4],["vec",3]]],null,null,null,[[["str",15]]],[[]],[[]],[[["usize",15]]],null,null,[[]],[[["program",3]],["string",3]],null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["program",3]],["string",3]],[[["tree",6]],["program",3]],[[]],[[]],[[]],[[["buffer",3]],["bool",15]],[[],["string",3]],[[],["string",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]]],"p":[[4,"VarType"],[4,"Instruction"],[13,"VarDec"],[3,"Program"],[3,"Buffer"],[8,"Generator"],[3,"CTarget"],[3,"Module"]]},\
"python_macros":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]}\
}');
initSearch(searchIndex);